(e=>{const t=t=>{const a=e.createElement("textarea");a.textContent=t,e.body.appendChild(a),a.select(),e.execCommand("copy"),e.body.removeChild(a)},a={"1.0.3.0":"3","1.0.3.1":"4","1.0.3.3":"5","1.0.3.5":"6","1.0.3.6":"7","1.0.3.6c":"8","1.0.3.9":"9","1.0.4.0":"10","1.0.4.2":"11","1.0.4.4b":"12","":"13"},n={"特になし":"0","歴史の階":"1","科学技術の階":"2","文学の階":"3","芸術の階":"4","自然科学の階":"5","言語の階":"6","社会科学の階":"7","哲学の階":"8","宗教の階":"9","総記の階":"10"},r={"都市怪談 クリア後":"2","都市伝説 クリア後":"3","都市疾病 1段目クリア後":"4-1","都市疾病 2段目クリア後":"4-2","都市悪夢 1段目クリア後":"5-1","都市悪夢 2段目クリア後":"5-2","都市の星 1段目クリア後":"6-1","都市の星 2段目クリア後":"6-2","都市の星 3段目クリア後":"6-3","不純物 1段目クリア後":"7-1","不純物 2段目クリア後":"7-2","不純物 3段目クリア後":"7-3"},o=(e,t,o)=>{let c=t.deckName,l=t.deckTypes,s=t.corePages,m=t.timingForCreate,h=t.hierarchies,i=t.version,d=t.videoLinks,p="{{#switch:{{SUBPAGENAME}}|デッキ図書棚|デッキ"+(e?"セット":"");return l.length>0&&(p+="|"+l.join("|")),s.length>0&&(p+="|"+s.join("|")),p+="|"+m+"=\n",p+='{{!-}}data-comment-id="'+o+'"\n',p+='{{!}}data-sort-value="'+c+'"{{!}}[[デッキ図書棚/デッキ'+(e?"セット":"")+"/"+c+"|"+c+"]]\n",p+="{{!}}"+l.map(e=>"[[:カテゴリ:デッキ/タイプ/"+e+"|"+e+"]]").join("/")+"\n",p+="{{!}}"+s.map(e=>"[[:カテゴリ:デッキ/コアページ/"+e+"|"+e+"]]").join("/")+"\n",p+='{{!}}data-sort-value="'+r[m]+'" style="white-space: nowrap;"{{!}}[[:カテゴリ:デッキ/作成可能時期/'+m+"|"+m.replace(/( )?クリア後/,"").replace(" ","<br>")+"]]\n",p+='{{!}}data-sort-value="'+(1===h.length?n[h[0]]:"0")+'"{{!}}'+h.map(e=>"[[:カテゴリ:デッキ/階層/"+e+"|"+e+"]]").join("/")+"\n",p+='{{!}}data-sort-value="'+a[i]+'" style="white-space: nowrap;"{{!}}'+(i?i+"より前\n":"\n"),p+="{{!}}"+d.join("/")+"\n",p+="{{!-}}\n",p+="}}\n"},c=(e,t)=>{const a=e.title.match(t)[1],n=[],r=[];let o=null;const c=[];Array.prototype.forEach.call(e.querySelectorAll(".categories .category"),e=>/デッキ\/タイプ\/(.+)/.test(e.dataset.name)?(n.push(e.dataset.name.match("デッキ/タイプ/(.+)")[1]),!0):/デッキ\/コアページ\/(.+)/.test(e.dataset.name)?(r.push(e.dataset.name.match("デッキ/コアページ/(.+)")[1]),!0):/デッキ\/作成可能時期\/(.+)/.test(e.dataset.name)?(o=e.dataset.name.match("デッキ/作成可能時期/(.+)")[1],!0):/デッキ\/階層\/(.+)/.test(e.dataset.name)?(c.push(e.dataset.name.match("デッキ/階層/(.+)")[1]),!0):void 0);const l=e.querySelector("h2").nextElementSibling.textContent.match(/ver(.+)より前に/),s=null!==l?l[1]:"",m=[];let h=e.querySelectorAll('[href*="https://youtu.be/"]');return Array.prototype.forEach.call(h,e=>{m.push("["+e.href+" ▶]")}),h=e.querySelectorAll('[href*="https://www.youtube.com/"]'),Array.prototype.forEach.call(h,e=>{m.push("["+e.href+" ▶]")}),{deckName:a,deckTypes:n,corePages:r,timingForCreate:o,hierarchies:c,version:s,videoLinks:m}};if(/デッキセット\/([^|]+) \| /.test(e.title)){const a=Object.values(e.querySelectorAll('a[href*="commentId"]')).find(e=>"投稿時コメント"===e.text).href.match(/commentId=(\d+)/)[1];t(o(!0,c(e,new RegExp(/デッキセット\/([^|]+) \| /)),a))}else if(/デッキ\/([^|]+) \| /.test(e.title)){const a=Object.values(e.querySelectorAll('a[href*="commentId"]')).find(e=>"投稿時コメント"===e.text).href.match(/commentId=(\d+)/)[1];t(o(!1,c(e,new RegExp(/デッキ\/([^|]+) \| /)),a))}})(document);
